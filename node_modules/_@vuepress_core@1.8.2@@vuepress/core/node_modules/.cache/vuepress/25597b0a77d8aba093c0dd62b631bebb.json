{"remainingRequest":"D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_cache-loader@3.0.1@cache-loader\\dist\\cjs.js??ref--1-0!D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??ref--1-1!D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_@vuepress_markdown-loader@1.8.2@@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\docs\\front-end\\import 和 require 的区别.md?vue&type=template&id=acfdb6f8&","dependencies":[{"path":"D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\docs\\front-end\\import 和 require 的区别.md","mtime":1615890326131},{"path":"D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_cache-loader@3.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_cache-loader@3.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\ipaynow\\~李家豪\\个人网站\\qiyulaoshi.io\\node_modules\\_@vuepress_markdown-loader@1.8.2@@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}